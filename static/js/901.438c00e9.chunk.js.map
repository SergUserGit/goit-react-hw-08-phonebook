{"version":3,"file":"static/js/901.438c00e9.chunk.js","mappings":"sMACA,GAAiB,E,oCCDJA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,SAASC,KAA7B,E,SCgFhC,EAxEoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXH,GAAWI,EAAAA,EAAAA,IAAYP,GAE7B,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACD,SAATP,EACFC,GAAQ,SAAAT,GAAK,OAAIe,CAAJ,IAEbJ,GAAU,SAAAX,GAAK,OAAIe,CAAJ,GAElB,EAkBKC,EAAQ,WACZP,GAAQ,SAAAT,GAAK,MAAI,EAAJ,IACbW,GAAU,SAAAX,GAAK,MAAI,EAAJ,GAChB,EAED,OACE,kBAAMiB,UAAWC,EAAAA,YAAiBC,SAtBf,SAAAC,GAMnB,GALAA,EAAIC,iBACJjB,GAASkB,EAAAA,EAAAA,OACQpB,EAASqB,QACxB,SAAAC,GAAO,OAAIA,EAAQhB,KAAKiB,gBAAkBjB,EAAKiB,aAAxC,IAEIC,OAAS,EACpBC,MAAMnB,EAAO,gCADf,CAIA,IAAMoB,GAAW,IAAIC,MAAOC,SACtBC,EAAS,CAAEvB,KAAAA,EAAMwB,MAAOtB,EAAQuB,UAAWL,GACjDxB,GAAS8B,EAAAA,EAAAA,IAAWH,IACpBf,GAJC,CAKF,EAQC,WACE,mBAAOC,UAAWC,EAAAA,UAAlB,kBAEE,kBACED,UAAWC,EAAAA,UACXH,MAAOP,EACP2B,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAU3B,QAGd,mBAAOK,UAAWC,EAAAA,UAAlB,oBAEE,kBACED,UAAWC,EAAAA,UACXH,MAAOL,EACPyB,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAU3B,QAGd,mBAAQK,UAAWC,EAAAA,WAAgBiB,KAAK,SAAxC,2BAKL,EC5Ec,SAASK,IACtB,OACE,4BACE,uCACA,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.module.css","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","export const getContacts = state => state.phonebook.contacts.items;\nexport const getIsLoading = state => state.phonebook.contacts.isLoading;\nexport const getError = state => state.phonebook.contacts.error;\nexport const getСontactsFilter = state => state.phonebook.contactsFilter;\n","import css from './ContactForm.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetFilterContacts } from 'redux/contacts/slice';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(state => value);\n    } else {\n      setNumber(state => value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(resetFilterContacts());\n    const findElem = contacts.filter(\n      contact => contact.name.toUpperCase() === name.toUpperCase()\n    );\n    if (findElem.length > 0) {\n      alert(name + ' is already in contacts.');\n      return;\n    }\n    const jsonDate = new Date().toJSON();\n    const newObj = { name, phone: number, createdAt: jsonDate };\n    dispatch(addContact(newObj));\n    reset();\n  };\n\n  const reset = () => {\n    setName(state => '');\n    setNumber(state => '');\n  };\n\n  return (\n    <form className={css.formContact} onSubmit={handleSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import ContactForm from 'components/ContactForm/ContactForm';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n    </div>\n  );\n}\n"],"names":["getContacts","state","phonebook","contacts","items","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","css","onSubmit","evt","preventDefault","resetFilterContacts","filter","contact","toUpperCase","length","alert","jsonDate","Date","toJSON","newObj","phone","createdAt","addContact","type","pattern","title","required","onChange","Contacts"],"sourceRoot":""}