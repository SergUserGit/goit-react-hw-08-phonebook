{"version":3,"file":"static/js/222.07e93b3c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"ContactForm_formContact__CkY07\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","export const getContacts = state => state.phonebook.contacts.items;\nexport const getIsLoading = state => state.phonebook.contacts.isLoading;\nexport const getError = state => state.phonebook.contacts.error;\nexport const getСontactsFilter = state => state.phonebook.contactsFilter;\n","import css from './ContactForm.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetFilterContacts } from 'redux/contacts/slice';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(state => value);\n    } else {\n      setNumber(state => value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(resetFilterContacts());\n    const findElem = contacts.filter(\n      contact => contact.name.toUpperCase() === name.toUpperCase()\n    );\n    if (findElem.length > 0) {\n      alert(name + ' is already in contacts.');\n      return;\n    }\n    // const jsonDate = new Date().toJSON();\n    const newObj = { name, number };\n    dispatch(addContact(newObj));\n    reset();\n  };\n\n  const reset = () => {\n    setName(state => '');\n    setNumber(state => '');\n  };\n\n  return (\n    <form className={css.formContact} onSubmit={handleSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonDeleteContact\":\"ContactList_buttonDeleteContact__rA+nZ\",\"listContact\":\"ContactList_listContact__gg2c1\",\"contactName\":\"ContactList_contactName__wLcl6\",\"itemContact\":\"ContactList_itemContact__S-nbG\"};","import css from './ContactList.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\n\nimport { getContacts, getСontactsFilter } from '../../redux/contacts/selectors';\n\nimport { resetFilterContacts } from 'redux/contacts/slice';\n\nconst ContactList = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const filterContactArray = useSelector(getСontactsFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = el => {\n    dispatch(resetFilterContacts());\n    dispatch(deleteContact(el.target.dataset.id));\n  };\n\n  const resultArray =\n    filterContactArray.length > 0 ? filterContactArray : contacts;\n\n  return (\n    <ul className={css.listContact}>\n      {resultArray.map(({ id, name, number }) => (\n        <li className={css.itemContact} key={id}>\n          <p className={css.contactName}>\n            {name}: {number}\n          </p>\n          <button\n            data-id={id}\n            onClick={handleDeleteContact}\n            className={css.buttonDeleteContact}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateFilter,\n  filterContacts,\n  resetFilterContacts,\n} from 'redux/contacts/slice';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nconst Filter = function () {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleFilterChange = e => {\n    dispatch(resetFilterContacts());\n    const { value: filterContact } = e.target;\n    dispatch(updateFilter(filterContact.toUpperCase()));\n    dispatch(filterContacts(contacts));\n  };\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <h3>Request in progress...</h3>}\n      {!isLoading && error && <h3>Error...{error}</h3>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["getContacts","state","phonebook","contacts","items","getIsLoading","isLoading","getError","error","getСontactsFilter","contactsFilter","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","css","onSubmit","evt","preventDefault","resetFilterContacts","filter","contact","toUpperCase","length","alert","newObj","addContact","type","pattern","title","required","onChange","filterContactArray","useEffect","fetchContacts","handleDeleteContact","el","deleteContact","dataset","id","resultArray","map","onClick","filterContact","updateFilter","filterContacts","Contacts"],"sourceRoot":""}